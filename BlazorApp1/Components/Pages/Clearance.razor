@page "/clearance"
@rendermode InteractiveServer
@using System.Text.Json
@using System.Text.Json.Serialization
@inject IHttpClientFactory ClientFactory
@inject IJSRuntime JS
<style>
    .row:hover {
    background-color: #e6e6e6; 
    transition: background-color 0.3s ease-in-out;
}
    #basic-addon2{
        height: 50px;
    }
</style>
<PageTitle>Clearance</PageTitle>

<section class="clearance-page">
    <div class="container" style="width:50%; margin:auto;">
        <h1 class="mb-3"><strong>Select Clearance</strong></h1>
        <p style="margin-top: -10px;">Please choose the type of clearance you wish to process.</p>
        <div class="container" style="padding-left: 0; margin-left: 0;">
            <h5>Clearance Type</h5>
            <hr class='text-primary' style="width: 140px; height:3px; margin-top: -5px; opacity: 100%;">
        </div>
        <div class="container border border-2">
            <div class="row border-bottom border-2 align-items-center py-2" style="cursor: pointer;" @onclick='() => HandleClick("General")'>
                <p class="mb-0">General</p>
            </div>
            <div class="row border-bottom border-2 align-items-center py-2" style="cursor: pointer;" @onclick='() => HandleClick("Regular Faculty")'>
                <p class="mb-0">Regular Faculty</p>
            </div>
            <div class="row border-bottom border-2 align-items-center py-2" style="cursor: pointer;" @onclick='() => HandleClick("Non-Regular Faculty")'>
                <p class="mb-0">Non-Regular Faculty</p>
            </div>
            <div class="row align-items-center py-2" style="cursor: pointer;" @onclick='() => HandleClick("Non-Regular Admin Staff")'>
                <p class="mb-0">Non-Regular Admin Staff</p>
            </div>
        </div>
        <br><br>
        <h5 class="text-primary">Other Options</h5>
        <p style="margin-top: -10px;">Please choose the type of clearance you wish to process.</p>
        <div class="container border border-2">
            <div class="row border-bottom border-2 align-items-center py-2" style="cursor: pointer;" @onclick='() => HandleClick("Review Clearance Request")'>
                <p class="mb-0">Review Clearance Request</p>
            </div>
            <div class="row border-bottom border-2 align-items-center py-2" style="cursor: pointer;" @onclick='() => HandleClick("View My Clearances")'>
                <p class="mb-0">View My Clearances</p>
            </div>
            <div class="row border-bottom border-2 align-items-center py-2" style="cursor: pointer;" @onclick='() => HandleClick("Prepare Accountabilities")'>
                <p class="mb-0">Prepare Accountabilities</p>
            </div>
            <div class="row border-bottom border-2 align-items-center py-2" style="cursor: pointer;" @onclick='() => HandleClick("Create/View Clearance Template")'>
                <p class="mb-0">Create/View Clearance Template</p>
            </div>
            <div class="row border-bottom border-2 align-items-center py-2" style="cursor: pointer;" @onclick='() => HandleClick("Clearance Purpose List")'>
                <p class="mb-0">Clearance Purpose List</p>
            </div>
            <div class="row align-items-center py-2" style="cursor: pointer;" @onclick='() => HandleClick("Clearance Office List")'>
                <p class="mb-0">Clearance Office List</p>
            </div>
        </div>
    </div>
</section>

<!-- Accountability Modal -->
<div class="modal fade" id="accountabilityModal" tabindex="-1" aria-labelledby="accountabilityModalTitle" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-xl">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Clearance Accountability Template</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="container-left" style="width: 250px;">
            <div class="input-group mb-3">
            <input type="text" class="form-control" aria-describedby="basic-addon2" placeholder="@selectedPeriod" readonly>
            <div class="input-group-append" @onclick='() => ShowPeriodModal()'>
                <span class="input-group-text" id="basic-addon2">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" class="bi bi-card-list" viewBox="0 0 16 16">
                        <path d="M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zm6.5 4.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3a.5.5 0 0 1 1 0"/>
                    </svg> 
                </span>
            </div>
        </div>
        </div>
        
        <table class="table table-striped">
    <thead>
        <tr>
            <th>Accountability</th>
            <th>Employee</th>
            <th>Position</th>
            <th>Office/Department</th>
            <th>Insert Sub-Signatory</th>
            <th>Remarks</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>Office Equipment</td>
            <td>John Doe</td>
            <td>Manager</td>
            <td>Finance</td>
            <td>
                <button class="btn btn-sm btn-primary">Add Signatory</button>
            </td>
            <td>
                
            </td>
        </tr>
        <tr>
            <td>Company Vehicle</td>
            <td>Jane Smith</td>
            <td>Supervisor</td>
            <td>Operations</td>
            <td>
                <button class="btn btn-sm btn-primary">Add Signatory</button>
            </td>
            <td>
                <select class="form-select">
                    <option>Pending</option>
                    <option>Approved</option>
                    <option>Rejected</option>
                </select>
            </td>
        </tr>
    </tbody>
</table>


      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Save changes</button>
      </div>
    </div>
  </div>
</div>

<!-- Period Modal -->
<div class="modal fade" id="periodModal" tabindex="-1" aria-labelledby="periodModalTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Select Period</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="container">
                    @if (period != null)
                    {
                        @foreach (var data in period)
                        {
                            <div class="row border-bottom border-2 align-items-center py-2" style="cursor: pointer;" @onclick="() => selectPeriod(data.Description)">
                                <p class="mb-0">@data.Description</p>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string? selectedPeriod;
    private string? errorMessage;
    private List<Period>? period = new List<Period>();

    private async Task HandleClick(string name)
    {
        await JS.InvokeVoidAsync("showModal", "#accountabilityModal");
    }

    private async Task ShowPeriodModal()
    {
        await JS.InvokeVoidAsync("showModal", "#periodModal");
        await GetAllPeriod();
    }

    private async Task selectPeriod(string? description)
    {
        if (!string.IsNullOrEmpty(description))
        {
            selectedPeriod = description;
            await JS.InvokeVoidAsync("closeModal", "#periodModal");
            StateHasChanged();
        }
    }

    private async Task GetAllPeriod()
    {
        try
        {
            using var handler = new HttpClientHandler
            {
                ServerCertificateCustomValidationCallback = (sender, cert, chain, sslPolicyErrors) => true
            };

            using var client = new HttpClient(handler);
            var response = await client.GetAsync("https://10.125.1.6:7087/api/my/GetAllPeriods");

            if (response.IsSuccessStatusCode)
            {
                var json = await response.Content.ReadAsStringAsync();
                period = JsonSerializer.Deserialize<List<Period>>(json);

                if (period == null || period.Count == 0)
                {
                    errorMessage = "Unable to parse or empty fiscal years data.";
                }
            }
            else
            {
                errorMessage = $"Failed to load fiscal years data. Status code: {response.StatusCode}";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
    }
}


<script src="site.js"></script>