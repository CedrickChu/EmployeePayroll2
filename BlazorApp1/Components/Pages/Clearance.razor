@page "/clearance"
@rendermode InteractiveServer
@using System.Text.Json
@using System.Text.Json.Serialization
@inject IHttpClientFactory ClientFactory
@inject IHttpClientFactory HttpClientFactory
@inject IJSRuntime JS
@inject ProtectedSessionStorage ProtectedSessionStore
@inject NavigationManager Navigation
 
<style>
    .row:hover {
        background-color: #d1d0d0;
        transition: background-color 0.3s ease-in-out;
    }

    .hover-underline {
        text-decoration: none;
    }

    .hover-underline:hover {
        text-decoration: underline;
    }

    .no-hover:hover {
        background-color: inherit !important;
    }

    .custom-btn {
        background-color: red !important;
        border-color: red !important;
    }

    .custom-btn:hover {
        background-color: darkred !important;
    }
    #basic-addon2:hover{
        background-color: #d1d0d0;
    }
</style>
<PageTitle>Clearance</PageTitle>

<section class="clearance-page">
    <div class="container" style="width:50%; margin:auto;">
        <h1 class="mb-3"><strong>Select Clearance</strong></h1>
        <p style="margin-top: -10px;">Please choose the type of clearance you wish to process.</p>
        <div class="container" style="padding-left: 0; margin-left: 0;">
            <h5>Clearance Type</h5>
            <hr class='text-primary' style="width: 140px; height:3px; margin-top: -5px; opacity: 100%;">
        </div>
        <div class="container border border-2">
            <div class="row border-bottom border-2 align-items-center py-2" style="cursor: pointer;"
                @onclick='() => HandleClick("General")'>
                <p class="mb-0">General</p>
            </div>
            <div class="row border-bottom border-2 align-items-center py-2" style="cursor: pointer;"
                @onclick='() => HandleClick("Regular Faculty")'>
                <p class="mb-0">Regular Faculty</p>
            </div>
            <div class="row border-bottom border-2 align-items-center py-2" style="cursor: pointer;"
                @onclick='() => HandleClick("Non-Regular Faculty")'>
                <p class="mb-0">Non-Regular Faculty</p>
            </div>
            <div class="row align-items-center py-2" style="cursor: pointer;"
                @onclick='() => HandleClick("Non-Regular Admin Staff")'>
                <p class="mb-0">Non-Regular Admin Staff</p>
            </div>
        </div>
        <br><br>
        <h5 class="text-primary">Other Options</h5>
        <p style="margin-top: -10px;">Please choose the type of clearance you wish to process.</p>
        <div class="container border border-2">
            <div class="row border-bottom border-2 align-items-center py-2" style="cursor: pointer;"
                @onclick='() => HandleClick("Review Clearance Request")'>
                <p class="mb-0">Review Clearance Request</p>
            </div>
            <div class="row border-bottom border-2 align-items-center py-2" style="cursor: pointer;"
                @onclick='() => HandleClick("View My Clearances")'>
                <p class="mb-0">View My Clearances</p>
            </div>
            <div class="row border-bottom border-2 align-items-center py-2" style="cursor: pointer;"
                @onclick='() => HandleClick("Prepare Accountabilities")'>
                <p class="mb-0">Prepare Accountabilities</p>
            </div>
            <div class="row border-bottom border-2 align-items-center py-2" style="cursor: pointer;"
                @onclick='() => HandleClick("Create/View Clearance Template")'>
                <p class="mb-0">Create/View Clearance Template</p>
            </div>
            <div class="row border-bottom border-2 align-items-center py-2" style="cursor: pointer;"
                @onclick='() => HandleClick("Clearance Purpose List")'>
                <p class="mb-0">Clearance Purpose List</p>
            </div>
            <div class="row align-items-center py-2" style="cursor: pointer;"
                @onclick='() => HandleClick("Clearance Office List")'>
                <p class="mb-0">Clearance Office List</p>
            </div>
        </div>
    </div>
</section>


<!-- Insert Employee Modal -->
<div class="modal fade" id="insertEmployeeModal" tabindex="-1" aria-labelledby="insertEmployeeModalTitle"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Insert Employee</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">

                <div class="position-relative border p-3 mb-3 rounded">
                    <span class="position-absolute top-0 start-0 translate-middle-y bg-white px-2 text-secondary ms-3">
                        Search
                    </span>
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Search Employee">
                        <button type="submit" class="btn btn-secondary w-4"><img src="images/search.svg"
                                style="cursor: pointer;"></button>
                    </div>
                </div>

                <table class="table table-striped" id="dataTable">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Position</th>
                            <th>Office/Department</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary">Insert Employee</button>
            </div>
        </div>
    </div>
</div>


@code {
    private int? selectedPeriodId = null;
    private string? selectedPeriod;
    private string? errorMessage;
    private int? userId;
    private int? AccountabilityTemplateId;
    private List<Period>? period = new List<Period>();
    private List<Accountabilities> accountabilities = new List<Accountabilities>();
    private List<AccountabilityDetails> accountabilityDetails = new List<AccountabilityDetails>();
    public class IdNumberConverter : JsonConverter<int?>
    {
        public override int? Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            if (reader.TokenType == JsonTokenType.String)
            {
                if (int.TryParse(reader.GetString(), out int result))
                {
                    return result;
                }
            }
            return null;
        }

        public override void Write(Utf8JsonWriter writer, int? value, JsonSerializerOptions options)
        {
            writer.WriteStringValue(value?.ToString());
        }
    }

    private async Task HandleClick(string action)
    {
        switch (action)
        {
            case "Review Clearance Request":
                Navigation.NavigateTo("/");
                break;
            case "View My Clearances":
                Navigation.NavigateTo("/");
                break;
            case "Prepare Accountabilities":
                Navigation.NavigateTo("/clearance/accountability");
                break;
            case "Create/View Clearance Template":
                Navigation.NavigateTo("/");                
                break;
            case "Clearance Purpose List":
                Navigation.NavigateTo("/");
                break;
            case "Clearance Office List":
                Navigation.NavigateTo("/");
                break;
            default:
                Console.WriteLine("Unknown action: " + action);
                break;
        }
    }

}


<script src="site.js"></script>